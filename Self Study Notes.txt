 05-09-2020
 Resources
 1. 20486D - Developing ASP.NET Core MVC Web Applications - Module 13 Implementing Web APIs - Lesson 3
 2. https://docs.microsoft.com/en-us/aspnet/web-api/overview/advanced/calling-a-web-api-from-a-net-client -- I used the product class layout as a start for my own product class
 3. https://docs.oracle.com/javase/7/docs/api/javax/naming/directory/package-summary.html - JAVAX seemed required from one of my resources and this is what came up when I looked into it. It seems more java based, so I probably don't need this information. 
   
   The website I was looking at was the Printful API documentaion: https://www.printful.com/docs/index
   This is where it mentioned the Authorization attribute. ASP.NET seems to have the Authorize attributes. So, I need to see how they are similar or if I can use both since Visual Studio recongized and tried to correct the problem with a using statement. 
   Next Goals
   1. Finish setting up
   2. Test to see if I can recieve the information from the API

   05-11-2020
   Resources
   1. https://www.youtube.com/watch?v=3J9Cs9ybZDg (using Giphy API) More links related to this video on a-b
      a. https://developers.giphy.com/
      b. https://developers.giphy.com/docs/sdk
   2. https://docs.microsoft.com/en-us/aspnet/core/fundamentals/routing?view=aspnetcore-3.1 Good information on what endpoint routing is and why this is coming up as a hurdle for the green squiglies under my code. Doesn't mean I understand it! 
   3. https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.mvcoptions?view=aspnetcore-3.1 - Found out how to change the value to false to move forward. Although, this looks important if I wanted to create other pages in my website. 
            "Gets or sets a value that determines if routing should use endpoints internally, or if legacy routing logic should be used. Endpoint routing is used to match HTTP requests to MVC actions, and to generate URLs with IUrlHelper."
    It makes me wonder if I need to keep some of the other app.etcs in the Configure section. 

   Thoughts
    I am starting to understand dependency a bit more. Interfaces are useful when we just want that list of methods and properties. That way, on our actual class, the main meat of code can be changed without trying to have a mass of code to look through when you want to just test other parts of the program. Plus, I can probably use another class in part of that interface. 
    It makes me wonder what comes first: the Interface or the Class?

    Time for break: Left off at 6:52 in YT video -  https://www.youtube.com/watch?v=3J9Cs9ybZDg

  05-12-2020
  Resources
  1. Still using YT Daniel Donbavand https://www.youtube.com/watch?v=3J9Cs9ybZDg
  2. https://developers.giphy.com/docs/api/endpoint This was used to get the link for my search endpoint
  3. https://developers.giphy.com/explorer/ This is the generated seach endpoint. I like this, very useful

  Returning to where I left off yesterday. I got the models set up and then the Giphy routes and deserilizaing that json file returned.

  Next Steps
  1. Continue from video at 16:25. This next step is going to the Startup.cs to implement the library. 
  2. Run the program to see if I can bring up the giphy stuff
  3. Then apply again to the Printful API. Now keep in mind that I do not want to show the key to the end user. So that route attribute will be useful for me to remember to do. 
  
  Later
  Resources
  1. https://www.postman.com/downloads/ - Next steps using Postman to test API (I think)
  2. https://github.com/dotnet/aspnetcore/issues/9542 - the changing the option thing was not successful again. So I googled it and here we go! The program likes it so far

  Notes 
  Okay, so everything I did on 05-09-2020 needed to be commented out. I forgot I just added stuff from the book and never really went to fix it. Homepage loads up! 

  How to Test
  1. Go to Postman
  2. Load Project
  3. Get the local host link: https://localhost:[######]/
  4. Make a new tab in the Postman and enter the link, then the v1/giphy/random/{searchCritera}
  Oh, it didn't work. Well, I mean, I went to the link directly on my end and now I see that it showed a collection of all the data

  05-15-2020
  Resouces
  1. Current Project - Going to try to recreate the steps I took from the YT video to set up my Printful API. 
  2. https://www.printful.com/docs/index -- All right! Now that I set up, I want to make sure I can retrieve this information. 
  3. https://github.com/codedghost/PrintfulLib/blob/master/PrintfulLib/PrintfulLib/Helpers/HttpClientHelper.cs -- Helpful in me finding out how others used their API key. 
  4. https://github.com/codedghost/PrintfulLib -- I want to look at this more! I like the structure of how everything looks. 

  Notes
  At this time, I only got to set up a way to have the API get request work. Now, after setting this up, I want to work on displaying the information. I hope I can get to this next part successfully. 

  Later
  Resources
  1. https://github.com/codedghost/PrintfulLib/blob/master/PrintfulLib/PrintfulLib/Helpers/HttpClientHelper.cs -- Observing this
  2. http://dotnetblogpost.com/2017/11/22/csharp-httpclient-utility-class-calling-web-api/ -- I looked up cause I was wondering how codedghost was implementing the headers
  3. https://www.printful.com/docs/index -- Looking at what the header needs to have
  4. https://stackoverflow.com/questions/4334521/httpwebrequest-using-basic-authentication 
  5. https://stackoverflow.com/questions/14627399/setting-authorization-header-of-httpclient -- the Header formatting I am going to use in this instance
  6. https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpclient?view=netcore-3.1 -- Overall documentation on the HttpClient
  7. https://docs.microsoft.com/en-us/uwp/api/windows.web.http.httpclient.defaultrequestheaders?view=winrt-19041 -- This might mean I don't need to set this up. Let's test it on the other computer! 

  05-17-2020
  Resources
  1. https://learning.postman.com/docs/postman/sending-api-requests/authorization/#basic-auth
  2. https://www.bing.com/search?q=encode+base64&form=EDGTCT&qs=SC&cvid=5cdef4c22a3544ac8874d0f3d1fb48e9&refig=77c776c37aba482da5dacb07a39439ec&cc=US&setlang=en-US&plvar=0 -- Used this to ensure that my encoder works. It does! 
  3. https://docs.microsoft.com/en-us/dotnet/framework/wcf/feature-details/data-contract-names -- And, now I got my data to show up! 
  4. https://www.yogihosting.com/aspnet-core-consume-api/ -- Started following this tutorial to see if I can start putting the data on my front page

  Notes
  So, it looks like with saving my API response to the Printful Model, I got to chech my data gets written to the right memebers. Now, to figure out how to display that data

  05-18-2020
  Resources
  1. https://alligator.io/css/cropping-images-object-fit/ -- From Sarah Mosso back in MSTA Connect! 
  2. https://www.w3schools.com/css/default.asp -- Helping me fixup my homepage


05-28-2020
Resources
1. https://www.printful.com/docs/products
2. CodedGhost's API is used as a reference point on how they set up getting their product information

Today's focus is setting up the Printful API to recieve information on one particular item with 1 variant of that item. 
Link to use with postman: /inventory/product/174141395

Looks like for this case, I may need to create a new class just for the variant, then put them in a list for later use.

Okay, so the id DOES pass through on the Printful Controller, but then it stops at the Printful Library's PrinfulServices.cs because of a null reference. 

05-29-2020
Resources
1. https://csharpindepth.com/articles/singleton - I'm trying to look up if what I have here is a singleton API 
2. https://danieldonbavand.com/implementing-an-api/ -- YT Daniel Donbavand again, but this time I am reading this blog post to find out that this is dependency injection I am using
3. https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-3.1 -- This holds an example of multiple interfaces used as parameters for the dependency. 

Notes
With thisDay.Resource #3 I notice that the format for getting the other interfaces are different.

I will test what I have now:

        private readonly IGetInventory _getInventory;
        private readonly IGetProductInfo _getProductInfo;

        public PrintfulServices(IGetInventory getInventory, IGetProductInfo getProductInfo)
        {
            _getInventory = getInventory;
            _getProductInfo = getProductInfo;
        }

Error Message: InvalidOperationException: Unable to resolve service for type 'Printful_Library.Printful.IGetProductInfo' while attempting to activate 'Printful_Library.Services.PrintfulServices'.

This is found under startup!!!

        // This method gets called by the runtime. Use this method to add services to the container.
        public void ConfigureServices(IServiceCollection services)
        {
            services.AddControllersWithViews();
            //05-09-2020 Added next two lines per textbook 20486D - Developing ASP.NET Core MVC Web Applications - Module 13 Implementing Web APIs - Lesson 3
            //05-11-2020 Another note from the Resource 1 Youtube video, this method adds all of the MVC framework dependencies into the project
            services.AddMvc(option => option.EnableEndpointRouting = false);
            //05-12-2020 Adding this to the ConfigureServices to enter the Giphylibrary inside
            services.AddSingleton<IGiphyServices, Giphy_Lib.Services.GiphyServices>();
            services.AddSingleton<IGetRandomGif, GetRandomGif>();
            services.AddSingleton<IPrintfulServices, PrintfulServices>();
            services.AddSingleton<IGetInventory, GetInventory>();
            //End 05-15-2-2020 
            services.AddHttpClient();

            
        }
I never added the singleton service!!!!!

And! I forgot to add the interface to the GetProductInfo
        public class GetProductInfo: IGetProductInfo

Okay, now I get this error: 
            Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON object (e.g. {"name":"value"}) into type 'System.Collections.Generic.IEnumerable`1[Printful_Library.Models.Data]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.
            To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.

Which is to be expected cause I knew more infromation was coming in from this API

At least this started right now. Looks like I got to backtrack and remodel my models to account for the varying differences of products. I'll probably follow codedGhost's model format. 

06-01-2020 
1. Using codedghost as reference

Notes
Okay, so now I got the price to show up in Postman(see 06-01-2020 PostmanResult)! I had to comment out the files string since I knew the data that is labeled under files have different variable names. 

06-02-2020 
Notes
Continued using codedghost as a reference and utilizing Postman in ensuring I got the data I wanted. Success! So, next step is to be able to display the price on the front page. 

06-03-2020
Notes
Started building on the ViewModel idea. I used my PDF notes from yesterday to keep going on my thought process. I think instead of trying to compute the range of prices on the front page, I want to instead have my initial prices be the starting price. Then when the user clicks on the image, it will take them to the next step. 

Dang, I had another idea come up, but lost it! Something to do with the front page and what it displays. Oh well, I can't remember now. I am trying to figure what best suits my needs. Static or Interfaces? Or both? I don't seem to remember if they can be used together. I think it is an either/or. 
Most of the set up is nearing its close. I hope I am successful. 

06-07-2020
Resources
1. 20486D - Developing ASP.NET Core MVC Web Applications Textbook

Notes
Continuing my ViewModel. I know I want to use the interface in my code, but I don't recall how to implement it.

06-08-2020 
Resources
1. https://stackoverflow.com/questions/11202673/converting-string-to-float-in-c-sharp

Notes
Following TODOs

06-10-2020 
Resources
1. https://www.youtube.com/watch?v=xVYa20DCUv0
2. https://jakeydocs.readthedocs.io/en/latest/mvc/controllers/dependency-injection.html
3. https://stackoverflow.com/search?page=2&tab=Relevance&q=api%20json%20multiple%20request%20C%23
4. https://docs.microsoft.com/en-us/aspnet/core/mvc/views/dependency-injection?view=aspnetcore-3.1 -- One can use the JSON file on its own

Notes
So, setting up the logic for trying to get multiple requests is hard! 
So my question is do I need to make a model into a service to be able to use that service? 

I am starting to think maybe I need to go to Printful Library and create the model there with a price so that all I need to do is call the service from Printful and go from there. 

06-13-2020
Resources
1. https://www.google.com/search?q=field+is+assigned+to+and+will+always+have+its+default+value+null&rlz=1C1CHZL_enUS695US695&oq=field+is+assigned+to+and+will+always+have+its+default+value+null&aqs=chrome..69i57.12040j0j8&sourceid=chrome&ie=UTF-8 -- Google link that I was using to identify an error on a variable never being assigned
Notes
I started working on the front page again. I forgot to note that my next step is to actually have the price be displayed later. This way I can cover the requirement that price is displayed to the customer. 